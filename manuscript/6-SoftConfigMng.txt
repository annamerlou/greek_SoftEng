# Διαχείριση σχηματισμών λογισμικού

## Ακρωνύμια
   
## Εισαγωγή

Ένα σύστημα μπορεί να οριστεί ως ο συνδυασμός από στοιχεία που αλληλεπιδρούν μεταξύ τους με σκοπό να πετύχουν έναν ή παραπάνω σκοπούς. Ο σχηματισμός ενός συστήματος αναφέρεται στα λειτουργικά και φυσικά χαρακτηριστικά του υλικού ή του λογισμικού όπως αυτά αναφέρονται στην τεχνολογική τεκμηρίωση η επιτυγχάνονται μέσα στο προϊόν. Μπορεί επίσης να θεωρηθεί ως μια συγκεκριμένη συλλογή από διάφορες εκδόσεις υλικού, ενδιάμεσου λογισμικού και λογισμικού συνδυασμένα με τέτοιο τρόπο ώστε να ικανοποιούν έναν συγκεκριμένο σκοπό. Η Διαχείριση Σχηματισμών ( Configuration Management ), επομένως, είναι η αρχή της αναγνώρισης των σχηματισμών ενός συστήματος σε συγκεκριμένα χρονικά σημεία με σκοπό το συστηματικό έλεγχο των αλλαγών στο σχηματισμό και τη διατήρηση της ακεραιότητας και της ανιχνευσιμότητα των σχηματισμών καθ' όλο τον κύκλο ζωής του συστήματος. Ορίζεται ως:

Η αρχή εφαρμογής τεχνικών και διαχειριστικών οδηγιών και παρακολούθησης για: να εντοπιστούν και τεκμηριωθούν τα λειτουργικά και τα φυσικά χαρακτηριστικά ενός στοιχείου σχηματισμού, να ελεγχθούν οι αλλαγές σε αυτά τα χαρακτηριστικά, να καταγραφούν και να αναφερθούν αλλαγές στην επεξεργασία και στην κατάσταση εφαρμογής και να επαληθευτεί η συμμόρφωση με συγκεκριμένες απαιτήσεις.

Η Διαχείριση σχηματισμών λογισμικού ( Software Configuration Management ) ( SCM ) είναι μια διεργασία υποστήριξης ενός λογισμικού καθ' όλη τη διάρκεια ζωής του, που βοηθάει τον προγραμματισμό του έργου, την ανάπτυξη και συντήρηση δραστηριοτήτων, τη διασφάλιση ποιότητας των δραστηριοτήτων, καθώς και του πελάτες και χρήστες του τελικού προϊόντος.   
Οι έννοιες διαχείριση σχηματισμών έχουν εφαρμογή σε όλα τα στοιχεία που χρίζουν έλεγχο, παρ' όλο που υπάρχουν μερικές διαφορές στην εφαρμογή μεταξύ υλικού και λογισμικού.

Η διαχείριση σχηματισμών λογισμικού είναι στενά συνδεδεμένη με τη δραστηριότητα διασφάλισης ποιότητας λογισμικού ( Software Quality Assurance )( SQA ). Όπως ορίζεται στο πεδίο γνώσεων Ποιότητας λογισμικού, οι διαδικασίες διασφάλισης ποιότητας λογισμικού παρέχουν διασφάλιση ότι τα προϊόντα λογισμικού και οι διαδικασίες στον κύκλο ζωής συμμορφώνονται στις ειδικές απαιτήσεις προγραμματίζοντας, θεσπίζοντας και αποδίδοντας ένα σύνολο δραστηριοτήτων με σκοπό να παρέχουν αρκετή  άνεση ότι το λογισμικό υλοποιείται με γνώμονα την ποιότητα. Οι διαδικασίες της διαχείρισης σχηματισμών λογισμικού βοηθούν στην επίτευξη των παραπάνω στόχων της διασφάλισης ποιότητας. Σε μερικά έργα, συγκεκριμένα συστήματα διασφάλισης ποιότητας λογισμικού επιτάσσουν συγκεκριμένες δραστηριότητες διαχείρισης σχηματισμών.

Οι δραστηριότητες της διαχείρισης σχηματισμών λογισμικού αποτελούν τη διαχείριση και τον σχεδιασμό προγράμματος των διεργασιών της διαχείρισης σχηματισμών, της αναγνώρισης σχηματισμών, τον έλεγχο σχηματισμών, την εκτίμηση της κατάστασης σχηματισμών, τις δοκιμές σχηματισμών λογισμικού, την διαχείριση και την παράδοση της έκδοσης λογισμικού.

Το γνωστικό πεδίο διαχείριση σχηματισμών λογισμικού, σχετίζεται με τα όλα τα άλλα γνωστικά πεδία, αφού το στοιχείο διαχείρισης σχηματισμών είναι τεχνούργημα που δημιουργείται και χρησιμοποιείται καθ' όλη τη διάρκεια κατασκευής λογισμικού.

## Κατανομή των θεμάτων για την διαχείριση σχηματισμών λογισμικού 

{id="fig-softconfig-tree"}
![Κατανομή των θεμάτων στο γνωστικό πεδίο Διαχείριση σχηματισμών λογισμικού.](images/6-SoftConfigMng.png)

Η κατανομή των θεμάτων για τα γνωστικά πεδία της διαχείριση σχηματισμών λογισμικού απεικονίζεται στο [σχετικό υπόδειγμα](#fig- softconfig-tree).

## Διαχείριση της διεργασίας διαχείρισης σχηματισμών  λογισμικού

Η διαχείριση σχηματισμών λογισμικού ελέγχει την εξέλιξη και ακεραιότητα ενός προϊόντος μέσω της αναγνώρισης των επί μέρους στοιχείων του, να διαχειρίζεται και να ελέγχει τις αλλαγές και να επικυρώνει, να καταγράφει και να παρουσιάζει πληροφορίες σχετικά με τους σχηματισμούς. Από την οπτική του μηχανικού λογισμικού, η διαχείριση σχηματισμών λογισμικού διευκολύνει τις δραστηριότητες ανάπτυξης και εφαρμογής της αλλαγής. Μια επιτυχημένη εφαρμογή της διαχείρισης σχηματισμών  λογισμικού απαιτεί προσεχτικό προγραμματισμό και διαχείριση. Αυτό, με τη σειρά του, απαιτεί την κατανόηση του γενικού οργανωσιακού πλαισίου, και των περιορισμών που αυτό προσδίδει, για τη σχεδίαση και την εφαρμογή διεργασιών διαχείρισης σχηματισμών  λογισμικού.

### Οργανωσιακό πλαίσιο για τη διαχείριση σχηματισμών λογισμικού

Για να γίνει ο σχεδιασμός μιας διεργασίας διαχείρισης σχηματισμών  λογισμικού για ένα έργο είναι αναγκαίο να κατανοηθεί πρώτα το οργανωσιακό πλαίσιο και οι σχέσεις μεταξύ των επί μέρους στοιχείων του. Η διαχείριση σχηματισμών  λογισμικού αλληλοεπιδρά με άλλες διαδικασίες ή οργανωσιακά στοιχεία.

Τα οργανωσιακά στοιχεία που είναι υπεύθυνα τις υποστηρικτικές διαδικασίες της τεχνολογίας λογισμικού μπορεί να είναι δομημένα με διάφορους τρόπους. Παρ' όλου που η ευθύνη για τη σωστή εκτέλεση μερικών εργασιών της διαχείρισης σχηματισμών  λογισμικού μπορεί να αφορά διάφορα μέρη του οργανισμού (όπως το τμήμα ανάπτυξης), η συνολική ευθύνη συχνά επαφίεται σε συγκεκριμένο οργανωσιακό στοιχείο ή σε κάποιο διορισμένο άτομο.

Το λογισμικό συχνά αναπτύσσεται ως μέρος ενός μεγαλύτερου συστήματος που περιέχει στοιχεία υλικού και ενδιάμεσου λογισμικού. Στην περίπτωση αυτή, οι διεργασίες διαχείρισης σχηματισμών  λογισμικού πραγματοποιούνται παράλληλα με τις διαδικασίες διαχείρισης σχηματισμού του υλικού και του ενδιάμεσου λογισμικού και θα πρέπει να είναι συνεπείς με αυτές σε επίπεδο συστήματος. Είναι σημαντικό στο σημείο αυτό να επισημάνουμε ότι το ενδιάμεσο λογισμικό περιέχει υλικό και λογισμικό και γι' αυτό μπορούν να εφαρμοστούν σε αυτό μέθοδοι διαχείρισης σχηματισμών και των δύο.

Η διαχείριση σχηματισμών λογισμικού μπορεί να συνδέεται με την δραστηριότητα διασφάλισης ποιότητας ενός οργανισμού σε θέματα, όπως τη διαχείριση καταγραφών/αναφορών και τα ελαττωματικά στοιχεία. Αναφορικά με τα παραπάνω, κάποια από τα στοιχεία που βρίσκονται υπό τον έλεγχο διαχείρισης σχηματισμών λογισμικού μπορεί επίσης να είναι καταγραφές έργου, τα οποία υπόκεινται στο πρόγραμμα διασφάλισης ποιότητας του οργανισμού. Η διαχείριση ελαττωματικών στοιχείων είναι συνήθως αρμοδιότητα της δραστηριότητας διασφάλισης ποιότητας, παρ' όλα αυτά η διαχείριση σχηματισμών λογισμικού μπορεί να βοηθήσει κι εκείνη συλλέγοντας και καταγράφοντας στοιχεία σχηματισμών λογισμικού που υπόκεινται σε αυτή την κατηγορία.

Ίσως έχει την μεγαλύτερη σχέση με την ανάπτυξη και τη συντήρηση λογισμικού οργανισμών. Σε αυτό το πλαίσιο διεξάγονται πολλές από τις διαδικασίες ελέγχου σχηματισμών λογισμικού. Συχνά, τα ίδια εργαλεία υποστηρίζουν σκοπούς ανάπτυξης, συντήρησης και διαχείρισης σχηματισμών λογισμικού.

### Περιορισμοί και καθοδήγηση για τις διεργασίες διαχείρισης σχηματισμών λογισμικού


Οι περιορισμοί που επηρεάζουν τις διεργασίες διαχείρισης σχηματισμών λογισμικού, καθώς και μέθοδοι καθοδήγησης προέρχονται από διάφορες πηγές. Πολιτικές και διαδικασίες, που διατυπώνονται σε εταιρικό ή άλλο οργανωσιακό επίπεδο, μπορεί να επηρεάζουν ή να υπονοούν το σχεδιασμό και την υλοποίηση μιας διεργασίας διαχείρισης σχηματισμών λογισμικού σε ένα δεδομένο έργο. Επιπρόσθετα, το συμβόλαιο μεταξύ του προμηθευτή κι αυτού που θα παραλάβει το τελικό προϊόν μπορεί να περιέχει εφόδια που επηρεάζουν τις διεργασίες διαχείρισης σχηματισμών λογισμικού. Για παράδειγμα, μερικοί έλεγχοι σχηματισμών μπορεί να είναι απαραίτητοι ή να ορίζεται ότι συγκεκριμένα στοιχεία πρέπει να τίθενται υπό τη διαχείριση σχηματισμών. Όταν αναπτύσσονται προϊόντα λογισμικού που έχουν πιθανότητα να επηρεάσουν την δημόσια ασφάλεια, εξωτερικά σώματα μπορούν να επιβάλλουν περιορισμούς. Τέλος, ο έκαστος κύκλος ζωής που επιλέγεται για ένα έργο λογισμικού, καθώς και το επίπεδο φορμαλισμού που επιλέγεται να εφαρμόσει το λογισμικό, επηρεάζουν τον σχεδιασμό και εφαρμογή των διεργασιών διαχείρισης σχηματισμών λογισμικού.

Η καθοδήγηση για το σχεδιασμό και την εφαρμογή μιας διεργασίας διαχείρισης σχηματισμών λογισμικού μπορεί να βρεθεί και από άλλες «πετυχημένες πρακτικές», όπως αυτές αντανακλώνται στα στάνταρντ της τεχνολογίας λογισμικού από διάφορους οργανισμούς. 

### Σχεδιασμός προγράμματος της διαχείρισης σχηματισμών λογισμικού


Ο σχεδιασμός προγράμματος μιας διεργασίας διαχείρισης σχηματισμών λογισμικού για ένα δεδομένο έργο πρέπει να είναι συνεπής με το οργανωσιακό πλαίσιο,  τους περιορισμούς που εφαρμόζονται, τη κοινώς αποδεκτή καθοδήγηση και τη φύση του έργου (για παράδειγμα, το μέγεθος, την ασφάλεια). Οι κύριες διαδικασίες που καλύπτονται, είναι ο προσδιορισμός σχηματισμών λογισμικού, η δοκιμές σχηματισμών λογισμικού, η αναφορά κατάστασης σχηματισμών λογισμικού, ο έλεγχος σχηματισμών λογισμικού και η διαχείριση της έκδοσης και της παράδοσης λογισμικού. Επιπροσθέτως, θέματα όπως η οργάνωση και οι υποχρεώσεις, οι πόροι και τα χρονοδιαγράμματα, η επιλογή και η υλοποίηση των εργαλείων, ο έλεγχος των πωλητών και των υπεργολάβων καθώς και  ο έλεγχος διεπαφής λαμβάνονται συνήθως υπόψη. Τα αποτελέσματα της διαδικασίας σχεδιασμού προγράμματος καταγράφονται σε ένα σχέδιο διαχείρισης σχηματισμών λογισμικού ( Software Configuration Management Plan ) ( SCMP ), το οποίο συνήθως υπόκειται στην επιθεώρηση και στον έλεγχο της διασφάλιση ποιότητας λογισμικού.

Η διακλάδωση και η συγχώνευση στρατηγικών πρέπει να σχεδιάζεται και να διαπραγματεύεται προσεκτικά, καθώς μπορεί να επηρεάσει σημαντικά πολλές δραστηριότητες της διαχείρισης σχηματισμών λογισμικού. Αναφορικά με τη διαχείριση σχηματισμών λογισμικού μια διακλάδωση μπορεί να οριστεί ως ένα σύνολο αναπτυσσόμενων εκδόσεων ενός πηγαίου αρχείου. Η συγχώνευση αποτελείται από τον συνδυασμό διαφορετικών αλλαγών στο ίδιο αρχείο. Αυτό συνήθως συμβαίνει όταν περισσότερα από ένα άτομα αλλάζουν τους σχηματισμούς του αρχείου. Υπάρχουν πολλές στρατηγικές διακλάδωσης και συγχώνευσης που έχουν ευρεία χρήση. 

Το μοντέλο του κύκλου ζωής της ανάπτυξης ενός λογισμικού επηρεάζει και τις διεργασίες της διαχείρισης σχηματισμών λογισμικού και συνεπώς αυτό πρέπει λαμβάνεται υπόψη του σχεδιασμού προγράμματος της διαχείρισης σχηματισμών λογισμικού. Για παράδειγμα, η συνεχής ενοποίηση/ολοκλήρωση είναι μια γενική πρακτική σε πολλές προσεγγίσεις σχετικά με την ανάπτυξη λογισμικού. Συνήθως χαρακτηρίζεται από συχνές επαναλήψεις του «κύκλου» ανάπτυξη-έλεγχος-εφαρμογή. Οι δραστηριότητες διαχείρισης σχηματισμών λογισμικού θα πρέπει να σχεδιάζονται αναλόγως.

### Οργάνωση και υποχρεώσεις της διαχείρισης σχηματισμών λογισμικού

Για να αντιμετωπιστεί τυχόν σύγχυση για το ποιος θα πραγματοποιήσει τις δεδομένες διεργασίες της διαχείρισης σχηματισμών λογισμικού, οι οργανωσιακοί ρόλοι που εμπλέκονται στις διαδικασίες της διαχείρισης σχηματισμών λογισμικού θα πρέπει να είναι ξεκάθαρα ορισμένοι. Συγκεκριμένες αρμοδιότητες για δεδομένες διαδικασίες ή καθήκοντα της διαχείρισης σχηματισμών λογισμικού θα πρέπει να ανατίθενται σε οργανωσιακές οντότητες είτε μέσω τίτλου είτε μέσω ενός οργανωσιακού στοιχείου. Τα κανάλια διακυβέρνησης και αναφοράς της διαχείρισης σχηματισμών λογισμικού θα πρέπει κι αυτά να ορίζονται, παρ' όλο που αυτό μπορεί να επιτυγχάνεται και στα στάδια διοίκησης του έργου και σχεδιασμού της διασφάλισης ποιότητας.

### Πόροι και χρονοπρογραμματισμός της διαχείρισης σχηματισμών λογισμικού

Ο σχεδιασμός προγράμματος της διαχείρισης σχηματισμών λογισμικού ορίζει τα στελέχη και τα εργαλεία που θα χρησιμοποιηθούν για να φέρουν εις πέρας τις διαδικασίες και τις εργασίες της. Αντιμετωπίζει προβλήματα χρονοπρογραμματισμού καθιερώνοντας τις απαραίτητες αλληλουχίες των εργασιών της διαχείρισης σχηματισμών λογισμικού και προσδιορίζοντας τη συσχέτισή τους με το πρόγραμμα και τα ορόσημα του έργου, όπως αυτά έχουν ορισθεί στο στάδιο του σχεδιασμού προγράμματος από τη διοίκηση έργου. Επίσης, ορίζονται τυχόν απαιτήσεις για εκπαίδευση του υπάρχοντος ή νέου προσωπικού, ώστε να υλοποιηθεί ο σχεδιασμός.

### Επιλογή και εφαρμογή εργαλείων

Όπως και για κάθε πεδίο της τεχνολογίας λογισμικού, η επιλογή και εφαρμογή των εργαλείων διαχείρισης σχηματισμών λογισμικού πρέπει να γίνεται με προσοχή. Θα πρέπει να ληφθούν υπόψη οι εξής ερωτήσεις:

  * Οργανισμός: Από οργανωσιακή σκοπιά, τι παρακινεί για την απόκτηση εργαλείων;
  * Εργαλεία: Μπορούμε να χρησιμοποιήσουμε εμπορικά διαθέσιμα εργαλεία ή πρέπει να δημιουργήσουμε εμείς τα δικά μας;
  * Περιβάλλον: Τι περιορισμοί επιβάλλονται από τον οργανισμό και τις τεχνικές του γενικού πλαισίου;
  * Κληροδότηση: Πως θα χρησιμοποιήσουν (ή δεν θα χρησιμοποιήσουν) τα έργα τα νέα εργαλεία;
  * Χρηματοδότηση: Ποιος θα πληρώσει για την απόκτηση των εργαλείων, τη συντήρηση, την εκπαίδευση και την παραμετροποίηση;
  * Εύρος χρήσης: Πώς θα εισαχθούν τα νέα εργαλεία; Για παράδειγμα, σε ολόκληρο τον οργανισμό ή μόνο σε συγκεκριμένα έργα;
  * Ιδιοκτησία: Ποιος είναι υπεύθυνος για την εισαγωγή νέων εργαλείων;
  * Μέλλον: Ποιο είναι το σχέδιο για τη μελλοντική χρήση των εργαλείων;
  * Αλλαγή: Πόσο ευπροσάρμοστα είναι τα εργαλεία;
  * Διακλάδωση και συγχώνευση: Τα εργαλεία είναι συμβατά με τις σχεδιασμένες διακλαδώσεις ή συγχωνεύσεις;
  * Ολοκλήρωση: Τα διάφορα εργαλεία της διαχείρισης σχηματισμών λογισμικού μπορούν να ενοποιηθούν με τα ήδη υπάρχοντα εργαλεία της διαχείρισης σχηματισμών λογισμικού ή με άλλα εργαλεία του οργανισμού;
  * Μετάπτωση: Μπορεί να μεταφερθεί το αποθετήριο, που συντηρείται από το εργαλείο ελέγχου εκδόσεων, σε άλλο παρόμοιο εργαλείο διατηρώντας το πλήρες ιστορικό παραμετροποίησης των σχηματισμών στοιχείων που περιέχει;

Η διαχείριση σχηματισμών λογισμικού τυπικά απαιτεί ένα σύνολο από εργαλεία και όχι ένα μόνο εργαλείο για τη σωστή λειτουργία της. Αυτά τα σύνολα εργαλείων πολλές φορές ονομάζονται και εργαλειοθήκες. Σε αυτό το πλαίσιο ένα ακόμα σημείο, που πρέπει να δοθεί βάση κατά το σχεδιασμό της επιλογής των εργαλείων, είναι ο καθορισμός του αν η εργαλειοθήκη της διαχείρισης σχηματισμών λογισμικού θα είναι «ανοιχτή» (με άλλα λόγια, αν εργαλεία από διαφορετικούς προμηθευτές θα χρησιμοποιούνται σε διαφορετικές δραστηριότητες της διεργασίας διαχείρισης σχηματισμών λογισμικού) ή θα είναι ολοκληρωμένη/ενοποιημένη (όπου τα επιμέρους στοιχεία της εργαλειοθήκης είναι σχεδιασμένα για να συνεργάζονται).

Το μέγεθος του οργανισμού και το είδος των έργων, που εμπλέκονται, μπορούν επίσης να επηρεάσουν την επιλογή των εργαλείων.

### Έλεγχος προμηθευτή/υπεργολάβου

Ένα έργο λογισμικού μπορεί να χρειαστεί την απόκτηση ή τη χρήση αγορασμένου λογισμικού, όπως για παράδειγμα μεταγλωττιστές ή άλλα εργαλεία. Ο σχεδιασμός προγράμματος της διαχείρισης σχηματισμών λογισμικού λαμβάνει υπόψη του αν και πως αυτά τα λογισμικά θα περάσουν τη διαδικασία ελέγχου σχηματισμών (για παράδειγμα, ενοποίηση στις βιβλιοθήκες του έργου) και πως αλλαγές ή αναβαθμίσεις θα αξιολογηθούν και θα διαχειριστούν.

Αντίστοιχη μελέτη θα πρέπει να εφαρμοστεί και για λογισμικά υπεργολάβων. Όταν γίνεται χρήση λογισμικού υπεργολάβων, θα πρέπει να καθιερώνονται τόσο ότι οι απαιτήσεις της διαχείρισης σχηματισμών λογισμικού που επιβάλλονται στις διεργασίες της διαχείρισης σχηματισμών λογισμικού των υπεργολάβων ως μέρος του έργο, όσο και τα μέσα που θα χρησιμοποιηθούν για την παρακολούθηση της συμμόρφωσης του λογισμικού. Το τελευταίο περιέχει και τη εξέταση των πληροφοριών διαχείρισης σχηματισμών λογισμικού, που πρέπει να είναι διαθέσιμες για την αποτελεσματική παρακολούθηση της συμμόρφωσης.

### Έλεγχος διεπαφής

Όταν ένα στοιχείο λογισμικού συνδέεται με ένα άλλο στοιχείο λογισμικού ή υλικού, μια αλλαγή σε οποιοδήποτε από τα παραπάνω στοιχεία μπορεί να επηρεάσει και το έτερο. Σχεδιάζοντας τη διεργασία διαχείρισης σχηματισμών λογισμικού πρέπει να ληφθεί υπόψη πως τα συνδεόμενα στοιχεία θα καθοριστούν και πως θα γίνει διαχείριση και επικοινωνία των αλλαγών σε αυτά. Ο ρόλος της διαχείρισης σχηματισμών λογισμικού μπορεί να ανήκει σε μια ευρύτερη διεργασία προσδιορισμού και ελέγχου της διεπαφής, σε επίπεδο συστήματος. Μπορεί να περιλαμβάνει τις προδιαγραφές διεπαφής, τα σχέδια ελέγχου της διεπαφής και τα έγγραφα ελέγχου της διεπαφής. Στην περίπτωση αυτή, ο σχεδιασμός της διαχείρισης σχηματισμών λογισμικού για τον έλεγχο διεπαφής λαμβάνει χώρα στα πλαίσια μια διεργασίας σε επίπεδο συστήματος.

### Σχέδιο της διαχείρισης σχηματισμών λογισμικού

Τα αποτελέσματα του σχεδιασμού διαχείρισης σχηματισμών λογισμικού για ένα δεδομένο έργο, καταγράφονται σε ένα σχέδιο διαχείρισης σχηματισμών λογισμικού ( Software Configuration Management Plan ) ( SCMP ), ένα «ζωντανό» αρχείο που έχει το ρόλο της παραπομπής για την διεργασία διαχείρισης σχηματισμών λογισμικού. Αυτό συντηρείται (στην περίπτωσή μας, ανανεώνεται και εγκρίνεται)  όσο είναι απαραίτητο στον κύκλο ζωής του λογισμικού. Κατά την εφαρμογή του σχεδίου διαχείρισης σχηματισμών λογισμικού, είναι απαραίτητο να αναπτυχθούν ένα σύνολο από επιμέρους πιο λεπτομερείς διαδικασίες που θα ορίζουν πως θα πραγματοποιούνται συγκεκριμένες απαιτήσεις μέσα στις καθημερινές δραστηριότητες, για παράδειγμα ποιες στρατηγικές διακλάδωσης θα χρησιμοποιηθούν και πόσο συχνά θα γίνονται χτίζονται, καθώς και πόσο συχνά θα τρέχει κάθε είδους αυτοματοποιημένου ελέγχου.

Καθοδήγηση για τη δημιουργία και συντήρηση ενός σχεδίου διαχείρισης σχηματισμών λογισμικού, βασιζόμενοι στις πληροφορίες που μπορούν να αντληθούν από τη διαδικασία σχεδιασμού, είναι διαθέσιμη σε πολλές πηγές. Ένα παράδειγμα, πιθανόν, να παρέχει τις απαραίτητες προϋποθέσεις για να συμπεριλαμβάνεται η πληροφορία σε ένα σχέδιο διαχείρισης σχηματισμών λογισμικού. Επίσης, να ορίζει και να περιγράφει τις έξι κατηγορίες πληροφορίας, που σχετίζεται με την διαχείριση σχηματισμών λογισμικού, για να συμπεριληφθεί σε ένα σχέδιο διαχείρισης σχηματισμών λογισμικού, ως εξής:

  * Εισαγωγή (σκοπός, εύρος, κανόνες χρήσης)
  * Διαχείριση της διεργασίας διαχείρισης σχηματισμών λογισμικού (οργάνωση, αρμοδιότητες, αρχές, εφαρμόσιμες πολιτικές, οδηγίες και διαδικασίες)
  * Δραστηριότητες της διαχείρισης σχηματισμών λογισμικού (αναγνώριση σχηματισμών, έλεγχος σχηματισμών κ.λπ.)
  * Χρονοπρογραμματισμός της διαχείρισης σχηματισμών λογισμικού (συγχρονισμός με άλλες διαδικασίες έργων)
  * Πόροι της διαχείρισης σχηματισμών λογισμικού (εργαλεία, φυσικοί και ανθρώπινοι πόροι)
  * Συντήρηση του σχεδίου διαχείρισης σχηματισμών λογισμικού.

### Παρακολούθηση της διαχείρισης σχηματισμών λογισμικού

Αφότου έχει γίνει εφαρμογή της διεργασίας διαχείρισης σχηματισμών λογισμικού, μπορεί να είναι απαραίτητος ένας βαθμός παρακολούθησης για να διασφαλιστεί ότι οι στόχοι του σχεδίου διαχείρισης σχηματισμών λογισμικού έρχονται εις πέρας. Είναι πιθανό να υπάρχουν συγκεκριμένες απαιτήσεις διασφάλισης ποιότητας για τη διασφάλιση της συμμόρφωσης με συγκεκριμένες διαδικασίες και μεθόδους διαχείρισης σχηματισμών λογισμικού. Ο υπεύθυνος για τη διαχείριση σχηματισμών λογισμικού διασφαλίζει ότι αυτοί στους οποίου έχει ανατεθεί μια αρμοδιότητα πραγματοποιούν σωστά τις καθορισμένες εργασίες διαχείρισης σχηματισμών λογισμικού. Η αρχή διασφάλισης ποιότητας λογισμικού, ως μέρος μιας διαδικασίας ελέγχου συμμόρφωσης, μπορεί επίσης να πραγματοποιήσει την παρακολούθηση αυτή.

Η χρήση ενοποιημένων εργαλείων διαχείρισης σχηματισμών λογισμικού με δυνατότητες ελέγχου των διεργασιών μπορεί να κάνει το έργο της παρακολούθησης ευκολότερο. Μερικά εργαλεία διευκολύνουν τη συμμόρφωση των διεργασιών, ενώ παράλληλα προσφέρουν ευελιξία στον μηχανικό λογισμικού για να αναπροσαρμόσει τις διεργασίες. Άλλα εργαλεία εφαρμόζουν την διεργασία, αφήνοντας στον μηχανικό λογισμικού μικρότερα περιθώρια ευελιξίας. Οι προδιαγραφές παρακολούθησης, καθώς και ο βαθμός ευελιξίας που θα παρέχεται στον μηχανικό λογισμικού είναι σημαντικοί παράγοντες για επιλογή του κατάλληλου εργαλείου.

### Δείκτες και μετρικές της διαχείρισης σχηματισμών λογισμικού

Οι δείκτες διαχείρισης σχηματισμών λογισμικού μπορεί να σχεδιαστούν για να προσφέρουν συγκεκριμένες πληροφορίες για την ανάπτυξη ενός προϊόντος ή για να παρέχουν βαθιά γνώση πάνω στον τρόπο λειτουργίας της διεργασίας διαχείρισης σχηματισμών λογισμικού. Ένας σχετικός στόχος της παρακολούθησης της διεργασίας διαχείρισης σχηματισμών λογισμικού είναι να ανακαλυφθούν ευκαιρίες για βελτίωση της διεργασίας. Οι μετρικές στις διεργασίες διαχείρισης σχηματισμών λογισμικού παρέχουν τα κατάλληλα μέσα για την παρακολούθηση της αποτελεσματικότητας των δραστηριοτήτων διαχείρισης σχηματισμών λογισμικού σε συνεχή βάση. Αυτές οι μετρικές είναι χρήσιμες για να γίνει ο χαρακτηρισμός της παρούσας κατάστασης μιας διεργασίας, καθώς και για να παρέχει μια  βάση για τη πραγματοποίηση συγκρίσεων σε βάθος χρόνου. Η ανάλυση των μετρήσεων μπορεί να καταφέρει διορατικότητα, οδηγώντας σε αλλαγές της διεργασίας και αναβαθμίσεις στο σχέδιο διαχείρισης σχηματισμών λογισμικού.

Οι βιβλιοθήκες λογισμικού καθώς και οι διάφορες δυνατότητες των εργαλείων διαχείρισης σχηματισμών λογισμικού παρέχουν πηγές για την εξόρυξη πληροφοριών σχετικά με τα χαρακτηριστικά της διεργασίας διαχείρισης σχηματισμών λογισμικού (καθώς και πληροφορίες για το έργο και τη διαχείριση). Για παράδειγμα, πληροφορίες σχετικές με τον απαιτούμενο χρόνο για να πραγματοποιηθούν διάφοροι τύποι αλλαγών μπορεί να είναι χρήσιμες για την αξιολόγηση των κριτηρίων που θα ορίσουν, τι επίπεδα εξουσίας είναι ιδανικά για να εξουσιοδοτήσουν συγκεκριμένους τύπους αλλαγών ή για την εκτίμηση μελλοντικών αλλαγών.

Πρέπει να δοθεί προσοχή, ώστε η παρακολούθηση να εστιάσει στη βαθιά γνώση που μπορεί να αποκτηθεί από τις μετρήσεις και όχι στις μετρήσεις αυτές καθ' αυτές.

### Υπό εκτέλεση έλεγχοι της διαχείρισης σχηματισμών λογισμικού

Έλεγχοι μπορούν να πραγματοποιηθούν κατά την διεργασία τεχνολογίας λογισμικού για να ερευνηθεί η παρούσα κατάσταση συγκεκριμένων στοιχείων των σχηματισμών ή για να προσεγγιστεί η εφαρμογή της διεργασίας διαχείρισης σχηματισμών λογισμικού. Ο υπό εκτέλεση έλεγχος της διαχείρισης σχηματισμών λογισμικού παρέχει έναν πιο επίσημο μηχανισμό για την παρακολούθηση συγκεκριμένων πτυχών της διεργασίας και μπορεί να συντονιστεί από τη λειτουργία της διασφάλισης ποιότητας λογισμικού (βλ. ενότητα 5, Έλεγχος σχηματισμών λογισμικού).

## Προσδιορισμός σχηματισμώνλογισμικού


Ο προσδιορισμός σχηματισμών λογισμικού εντοπίζει τα στοιχεία που πρέπει να ελεγχθούν, καθιερώνει σχήματα προσδιορισμού για τα στοιχεία και τις εκδόσεις τους, και καθιστά τα εργαλεία και τις τεχνικές που θα χρησιμοποιηθούν για την απόκτηση και τη διαχείριση στοιχείων υπό έλεγχο. Αυτές οι δραστηριότητες παρέχουν τη βάση για άλλες δραστηριότητες της διαχείρισης σχηματισμών λογισμικού.

### Εντοπισμός προβλεπόμενων υπό έλεγχο στοιχείων

Ένα από τα πρώτα βήματα για τον έλεγχο της αλλαγής είναι ο εντοπισμός των στοιχείων λογισμικού που πρόκειται να ελεγχθούν. Αυτό εμπεριέχει την κατανόηση των σχηματισμών του λογισμικού στα πλαίσια των σχηματισμών του συστήματος, την επιλογή στοιχείων σχηματισμών λογισμικού, την ανάπτυξη μιας στρατηγικής για κατηγοριοποίηση των στοιχείων λογισμικού και την περιγραφή της σχέσης τους και την καθορισμό τόσο των βάσεων, που θα χρησιμοποιηθούν, όσο και των διαδικασιών για την απόκτηση αυτών των βάσεων  για τα στοιχεία.

### Σχηματισμός λογισμικού

Ο σχηματισμός λογισμικού είναι τα λειτουργικά και φυσικά χαρακτηριστικά του υλικού ή του λογισμικού, όπως αυτά αναφέρονται στην τεχνική τεκμηρίωση ή όπως επιτυγχάνεται μέσα σε ένα προϊόν. Μπορεί να θεωρηθεί ως ένα μέρος σχηματισμού ενός μεγαλύτερου συστήματος.

### Στοιχείο σχηματισμών λογισμικού

Ένα στοιχείο σχηματισμού είναι ένα στοιχείο ή η συσσωμάτωση ενός υλικού ή λογισμικού ή και των δύο, το οποίο σχεδιάζεται ώστε να είναι διαχειρίσιμο σαν μια μοναδική οντότητα. Ένα στοιχείο σχηματισμών λογισμικού ( Software Configuration Item ) ( SCI ) είναι μια οντότητα λογισμικού, η οποία έχει καθιερωθεί ως ένα στοιχείο σχηματισμού. Η διαχείριση σχηματισμών λογισμικού τυπικά ελέγχει ένα εύρος στοιχείων σε συνδυασμό με τον ίδιο τον κώδικα. Στοιχεία του λογισμικού με προοπτικές να γίνουν στοιχεία σχηματισμών λογισμικού περιλαμβάνουν τεκμηρίωση για τα  σχέδια, τις προδιαγραφές και το σχεδιασμό, υλικά ελέγχου, εργαλεία λογισμικού, πηγαίο και εκτελέσιμο κώδικα, βιβλιοθήκες κώδικα, δεδομένα και λεξικά δεδομένων, και τεκμηρίωση  για την εγκατάσταση, τη συντήρηση, τις λειτουργίες και τη χρήση του λογισμικού.

Η επιλογή στοιχείου σχηματισμών λογισμικού είναι μια σημαντική διεργασία κατά την οποία πρέπει να επιτυγχάνεται η ισορροπία μεταξύ της παροχής επαρκούς ορατότητας για του σκοπούς του ελέγχου του έργου και της παροχή ενός διαχειρίσιμου αριθμού ελεγχόμενων στοιχείων.

### Συσχετίσεις στοιχείων σχηματισμών λογισμικού

       
Η δομικές σχέσεις μεταξύ επιλεγμένων στοιχείων σχηματισμών λογισμικού, και των μερών που τα αποτελούν, επηρεάζουν άλλες δραστηριότητες ή εργασίες διαχείρισης σχηματισμών λογισμικού, όπως για παράδειγμα το χτίσιμο του λογισμικού ή την ανάλυση της επίδρασης προτεινόμενων αλλαγών. Ο σωστός εντοπισμός αυτών των συσχετίσεων είναι εξίσου σημαντικός για την υποστήριξη της ιχνηλασιμότητας. Ο σχεδιασμός του σχεδίου εντοπισμού στοιχείων σχηματισμών λογισμικού οφείλει να λαμβάνει υπόψη του την ανάγκη να γίνει χαρτογράφηση των εντοπισμένων στοιχείων στη δομή του συστήματος, καθώς και την ανάγκη για υποστήριξη της ανάπτυξης των στοιχείων του λογισμικού και των συσχετίσεων τους.

### Έκδοση λογισμικού

Τα στοιχεία του λογισμικού εξελίσσονται όσο προχωράει ένα έργο. Η έκδοση ενός στοιχείου λογισμικού είναι ένα αναγνωρισμένο στιγμιότυπο του στοιχείου. Μπορεί να περιγραφεί και σαν μια φάση ενός εξελισσόμενου στοιχείου. Μια παραλλαγή είναι μια έκδοση ενός προγράμματος, η οποία προκύπτει από την υλοποίηση ποικιλομορφίας λογισμικού. 

### Βάση


Η βάσης ενός λογισμικού είναι μια επίσημα εγκεκριμένη έκδοση ενός στοιχείου σχηματισμού, το οποίο τυπικά έχει σχεδιαστεί και κατασκευαστεί σε συγκεκριμένο χρόνο κατά τον κύκλο ζωής του στοιχείου σχηματισμού. Ο συγκεκριμένος ορισμός μπορεί να χρησιμοποιηθεί και για μια συγκεκριμένη έκδοση ενός στοιχείου σχηματισμών λογισμικού, το οποίο έχει συμφωνηθεί. Σε κάθε περίπτωση, η βάση μπορεί να αλλάξει μόνο μέσω επίσημων διαδικασιών ελέγχου αλλαγών. Η βάση, μαζί με όλες τις εγκεκριμένες αλλαγές πάνω σ' αυτήν, παριστάνουν την τρέχοντα εγκεκριμένο σχηματισμό.

Συνήθως οι βάσεις που χρησιμοποιούνται περιλαμβάνουν λειτουργικές, κατανεμημένες, αναπτυξιακές  και προϊοντικές αρχικές βάσεις. Η λειτουργική βάση ανταποκρίνεται στις επιθεωρημένες απαιτήσεις του συστήματος. Η κατανεμημένη βάση ανταποκρίνεται στις επιθεωρημένες προδιαγραφές των αναγκών του λογισμικού και της διεπαφής. Η αναπτυξιακή βάση παρουσιάζει τους αναπτυσσόμενους σχηματισμούς λογισμικού σε συγκεκριμένες χρονικές στιγμές κατά τον κύκλο ζωής του. Η αλλαγή εξουσίας για αυτή την βάση συνήθως επαφίεται στον οργανισμό ανάπτυξης. Παρ' όλα αυτά, μπορεί να την μοιράζεται με άλλες οργανωσιακές δομές (για παράδειγμα, τη διαχείριση σχηματισμών λογισμικού ή τον έλεγχο). Η προϊοντική βάση ανταποκρίνεται στο ολοκληρωμένο προϊόν λογισμικού, που παραδίδεται για την ολοκλήρωση συστήματος. Οι βάσεις που θα χρησιμοποιηθούν σε ένα συγκεκριμένο έργο, μαζί με τα ανάλογα επίπεδα εξουσίας που απαιτούνται για την έγκριση αλλαγών, προσδιορίζονται τυπικά στο σχέδιο διαχείρισης σχηματισμών λογισμικού.

### Απόκτηση στοιχείων διαμόρφωσης λογισμικού

Τα στοιχεία σχηματισμών λογισμικού υπόκεινται στον έλεγχο της διαχείρισης σχηματισμών λογισμικού σε διάφορες χρονικές στιγμές. Με άλλα λόγια, ενσωματώνονται σε μια συγκεκριμένη βάση σε μια συγκεκριμένη χρονική στιγμή στον κύκλο ζωής του λογισμικού. Το γεγονός που δίνει έναυσμα για να συμβεί η ενσωμάτωση είναι η ολοκλήρωση κάποιας μορφής μίας επίσημης εργασίας αποδοχής, όπως η επίσημη επιθεώρηση. Το σχήμα 6.2 αποτυπώνει την ανάπτυξη μίας βάσης καθώς προχωράει ο κύκλος ζωής. Το σχήμα αυτό βασίζεται, για λόγους απεικόνισης και μόνο, στο μοντέλο του καταρράκτη. Οι δείκτες που χρησιμοποιούνται στο σχήμα δείχνουν τις εκδόσεις των αναπτυσσόμενων στοιχείων. Το αίτημα αλλαγής λογισμικού περιγράφεται στην ενότητα 3.1.

## Υπόδειγμα 6.2

Κατά την απόκτηση ενός στοιχείου σχηματισμού λογισμικού πρέπει να καθιερωθεί η προέλευσή του και η αρχική του ακεραιότητα. Η απόκτηση ενός στοιχείου σχηματισμού λογισμικού συνεπάγεται  ότι οι αλλαγές στο συγκεκριμένο στοιχείο θα πρέπει να εγκριθούν επίσημα ως κατάλληλες για το στοιχείου σχηματισμού λογισμικού και βάση που το αφορά, όπως αυτό ορίζεται στο σχέδιο διαχείρισης σχηματισμών λογισμικού. Η έγκριση συνεπάγεται ότι το στοιχείο ενσωματώνεται στην βάση του λογισμικού σύμφωνα με την κατάλληλη διαδικασία.

### Βιβλιοθήκη λογισμικού

Μια βιβλιοθήκη λογισμικού αποτελεί μια ελεγμένη συλλογή από λογισμικά και σχετική τεκμηρίωση σχεδιασμένη έτσι ώστε να βοηθάει την ανάπτυξη, τη χρήση ή τη συντήρηση λογισμικού. Είναι επίσης σημαντική στις διαδικασίες διαχείρισης έκδοσης και παράδοσης του λογισμικού. Διάφορα είδη βιβλιοθηκών μπορούν να χρησιμοποιηθούν, καθένα από τα οποία ανταποκρίνεται στο επίπεδο ωριμότητας το εκάστοτε στοιχείο λογισμικού. Για παράδειγμα, μια λειτουργική βιβλιοθήκη μπορεί να βοηθήσει στον προγραμματισμό και μια βιβλιοθήκη υποστήριξης έργων μπορεί να υποστηρίξει τον έλεγχο, ενώ παράλληλα μια κύρια βιβλιοθήκη θα μπορούσε να χρησιμοποιηθεί σε τελικά προϊόντα. Ένα κατάλληλο επίπεδο ελέγχου διαχείρισης σχηματισμών λογισμικού (σχετική βάση και επίπεδο εξουσίας για αλλαγές) σχετίζεται με κάθε βιβλιοθήκη. Η ασφάλεια σε όρους ελέγχου πρόσβασης και παροχής αντιγράφων ασφαλείας αποτελεί κλειδί για την διαχείριση της βιβλιοθήκης.

Το εργαλείο  (ή τα εργαλεία )που χρησιμοποιείται για κάθε βιβλιοθήκη πρέπει να υποστηρίζει τις ανάγκες ελέγχου της διαχείρισης σχηματισμών λογισμικού την εκάστοτε βιβλιοθήκη, σε όρους ελέγχου πρόσβασης και ελέγχου στοιχείου σχηματισμών λογισμικού. Στο επίπεδο μιας λειτουργικής βιβλιοθήκης, αυτό σημαίνει, η δυνατότητα διαχείρισης κώδικα, που παρέχεται στους προγραμματιστές, στους συντηρητές και στους διαχειριστές σχηματισμών λογισμικού. Το εργαλείο συγκλίνει στην διαχείριση των εκδόσεων των στοιχείων λογισμικού υποστηρίζοντας τις δραστηριότητες πολλών προγραμματιστών. Σε υψηλότερα επίπεδα ελέγχου η πρόσβαση είναι πιο περιορισμένη και ο διαχειριστής σχηματισμών λογισμικού είναι ο πρωταρχικός χρήστης.

 Αυτές οι βιβλιοθήκες είναι εξίσου σημαντική πηγή πληροφορίας για μετρήσεις προόδου της εργασίας. 

## Έλεγχος σχηματισμών λογισμικού


Ο έλεγχος σχηματισμών λογισμικού ασχολείται με τη διαχείριση αλλαγών κατά τη διάρκεια του κύκλου ζωής του λογισμικού. Καλύπτει τη διαδικασία καθορισμού των αλλαγών που πρέπει να γίνουν, της εξουσίας για την έγκριση συγκεκριμένων αλλαγών, της υποστήριξης για την εφαρμογή των αλλαγών αυτών, καθώς και του πλαισίου της επίσημης απόκλισης από τις απαιτήσεις του έργου, καθώς και την ακύρωση αυτών. Η πληροφορία που προκύπτει από αυτές τις διαδικασίες είναι χρήσιμη για τη μέτρηση της κίνησης και των ρήξεων των αλλαγών, καθώς και των πτυχών επανεπεξεργασίας.

### Αίτηση, αξιολόγηση και έγκριση αλλαγών λογισμικού

Το πρώτο βήμα στη διαχείριση αλλαγών των υπό έλεγχο στοιχείων είναι ο καθορισμός των αλλαγών που πρόκειται να γίνουν. Η διεργασία αίτησης για αλλαγή στο λογισμικό (βλ. μία τυπική ροή μιας διεργασίας αίτησης για αλλαγή στο υπόδειγμα 6.3) παρέχει επίσημες διαδικασίες για την υποβολή και καταγραφή των αιτημάτων για αλλαγή, την αξιολόγηση του πιθανού κόστους και του αντίκτυπου της προτεινόμενης αλλαγής, και την αποδοχή, την τροποποίηση , την αναβολή ή την απόρριψη της προτεινόμενης αλλαγής. Ένα αίτημα για αλλαγή είναι ένα αίτημα για διεύρυνση ή συρρίκνωση του εύρους του έργου, για τροποποίηση των πολιτικών, των διεργασιών, των διαδικασιών ή των σχεδίων, την τροποποίηση στο κόστος ή τον επανέλεγχο του χρονοπρογραμματισμού. Αιτήματα για αλλαγές στα στοιχεία σχηματισμών λογισμικού μπορούν να γίνουν σε οποιοδήποτε στάδιο του κύκλου ζωής και μπορούν να περιλαμβάνουν μια προτεινόμενη λύση και απαιτούμενη προτεραιότητα. Μια πηγή ενός αιτήματος για αλλαγή είναι η μύηση για διορθωτικές δράσεις ως ανταπόκριση σε αναφορές προβλημάτων. Ανεξαρτήτως της πηγής, το είδος της αλλαγής (για παράδειγμα, ελάττωμα ή ενίσχυση) συνήθως καταγράφεται στα αιτήματα αλλαγής λογισμικού.

## Υπόδειγμα 6.3

Αυτό δίνει τη δυνατότητα για παρακολούθηση ελαττωμάτων και τη συλλογή μετρήσεων στις δραστηριότητες αλλαγής με βάση το είδος της αλλαγής. Μόλις ληφθεί ένα αίτημα αλλαγής λογισμικού, πραγματοποιείται μια τεχνική αξιολόγηση ( γνωστή και ως ανάλυση επιπτώσεων) για να καθορίσει το εύρος των τροποποιήσεων, που θα ήταν απαραίτητες σε περίπτωση που το αίτημα για αλλαγή γίνει δεκτό. Η καλή κατανόηση των σχέσεων μεταξύ στοιχείων λογισμικού (πιθανώς, και υλικού) είναι σημαντική για αυτή τη εργασία. Τέλος, μια καθορισμένη αρχή -- αντίστοιχη με την βάση, που θα επηρεαστεί από την αλλαγή και τη φύση της αλλαγής -- θα αξιολογήσει τις τεχνικές και διαχειριστικές πτυχές του αιτήματος για αλλαγή και είτε θα το αποδεχθεί, θα το τροποποιήσει, θα το απορρίψει ή θα αναβάλει την προτεινόμενη αλλαγή.

### Επιτροπή ελέγχου διαμόρφωσης λογισμικού

Η εξουσία για την αποδοχή ή απόρριψη προτεινόμενων αλλαγών υπόκειται σε μια οντότητα, γνωστή ως Επιτροπή Ελέγχου Διαμόρφωσης (Configuration Control Board) (CCB). Σε μικρότερα έργα, η εξουσία αυτή μπορεί να υπόκειται στον αρχηγό του έργου ή σε ένα αρμόδιο άτομο παρά σε μια πολυάριθμη επιτροπή. Μπορεί να υπάρχουν πολλά επίπεδα εξουσίας ανάλογα με ένα σύνολο κριτηρίων, όπως τα τη σημασία του στοιχείου, που αφορά η αλλαγή, τη φύση της αλλαγής (για παράδειγμα, το αντίκτυπο που θα έχει στον προϋπολογισμό και τον χρονοπρογραμματισμό), ή την τρέχουσα θέση του έργου στον κύκλο ζωής του. Η σύνθεση της Επιτροπής Ελέγχου Διαμόρφωσης που χρησιμοποιείται σε ένα σύστημα διαφέρει ανάλογα με τα παραπάνω κριτήρια (ένας εκπρόσωπος της Επιτροπής Ελέγχου Διαμόρφωσης θα είναι πάντα παρών). Αντιπροσωπεύονται όλα τα ενδιαφερόμενα μέρη, που είναι κατάλληλα για το επίπεδο της Επιτροπής Ελέγχου Διαμόρφωσης. Όταν το πεδίο δράσης της Επιτροπής Ελέγχου Διαμόρφωσης είναι αποκλειστικά το λογισμικό είναι γνωστό και ως Επιτροπή Ελέγχου σχηματισμών λογισμικού ( Software Configuration Control Board ) ( SCCB ). Οι δραστηριότητες της Επιτροπής ελέγχου σχηματισμών λογισμικού είναι συνήθως ο έλεγχος και η αξιολόγηση της ποιότητας του λογισμικού.

### Διεργασία αιτήματος αλλαγής λογισμικού


Μια αποτελεσματική διεργασία αιτήματος αλλαγής λογισμικού απαιτεί τη χρήση υποστηρικτικών εργαλείων και διαδικασιών για τη έναρξη των αιτημάτων για αλλαγή, επιβάλλοντας τη ροή της διεργασίας αλλαγής, αποτυπώνοντας τις αποφάσεις της Επιτροπής Ελέγχου Σχηματισμών και αναφέροντας πληροφορίες σχετικά με τις διαδικασίες αλλαγής. Μια σύνδεση μεταξύ της ικανότητας αυτού του εργαλείου και του συστήματος αναφοράς προβλημάτων μπορεί να εξυπηρετήσει την ανίχνευση των λύσεων των αναφερόμενων προβλημάτων.

### Εφαρμογή αλλαγών λογισμικού


Εγκεκριμένα αιτήματα αλλαγής λογισμικού εφαρμόζονται χρησιμοποιώντας ορισμένες διαδικασίες λογισμικού σε συμφωνία με τις απαιτήσεις του χρονοπρογραμματισμού που εφαρμόζεται. Εφόσον, ένας αριθμός εγκεκριμένων αιτημάτων αλλαγής λογισμικού μπορούν να εφαρμοστούν ταυτόχρονα, είναι απαραίτητο να παρέχεται ένα μέσο για την ανίχνευση των αιτημάτων αλλαγής λογισμικού, που έχουν ενσωματωθεί σε συγκεκριμένες εκδόσεις και βάσεις του λογισμικού. Ως μέρος της ολοκλήρωσης της διεργασίας αλλαγών, οι ολοκληρωμένες αλλαγές μπορεί να περάσουν ελέγχους σχηματισμού και επαλήθευση ποιότητας λογισμικού συμπεριλαμβάνοντας τη διασφάλιση ότι έχουν εφαρμοστεί μόνο εγκεκριμένες αλλαγές. Η διεργασία αιτήματος αλλαγής λογισμικού, που περιγράφεται παραπάνω, συνήθως τεκμηριώνει τις πληροφορίες έγκρισης της διαχείρισης σχηματισμών λογισμικού (και άλλων) για την αλλαγή αυτή.

Οι αλλαγές μπορεί να υποστηρίζονται από τα εργαλεία ελέγχου έκδοσης του πηγαίου κώδικα. Αυτά τα εργαλεία επιτρέπουν σε έναν ή μια ομάδα από μηχανικούς λογισμικού να παρακολουθούν και να τεκμηριώνουν αλλαγές στον πηγαίο κώδικα. Τα εργαλεία αυτά παρέχουν ένα αποθετήριο για την αποθήκευση του πηγαίου κώδικα, μπορούν να αποτρέψουν την επεξεργασία του ίδιου κομματιού την ίδια χρονική στιγμή από παραπάνω από έναν μηχανικούς λογισμικού, και καταγράφουν όλες τα αλλαγές που γίνονται στον πηγαίο κώδικα. Οι μηχανικοί λογισμικού ελέγχουν τα διάφορα κομμάτια κώδικα έξω από το αποθετήριο, κάνουν αλλαγές, τεκμηριώνουν τις αλλαγές και μετά αποθηκεύουν τα επεξεργασμένα κομμάτια στο αποθετήριο. Αν χρειαστεί, οι αλλαγές μπορούν να απορριφθούν, ανακτώντας την προηγούμενη βάση. Πιο ισχυρά εργαλεία μπορούν να υποστηρίξουν γεωγραφικά απομακρυσμένα περιβάλλοντα και την παράλληλη ανάπτυξη. Αυτά τα εργαλεία μπορεί να δηλώνονται ως ξεχωριστές, εξειδικευμένες εφαρμογές υπό τον έλεγχο ανεξάρτητων ομάδων διαχείρισης σχηματισμών λογισμικού. Μπορεί επίσης να παρουσιάζονται ως ενσωματωμένα κομμάτια του περιβάλλοντος ανάπτυξης λογισμικού. Τέλος, μπορεί να είναι τόσο βασικά όσο ένα στοιχειώδες σύστημα ελέγχου των αλλαγών που παρέχεται μαζί με ένα λειτουργικό σύστημα.

### Αποκλίσεις και αποποιήσεις


Οι περιορισμοί που επιβάλλονται κατά την προσπάθεια ανάπτυξης λογισμικού ή οι προδιαγραφές που δημιουργούνται κατά τις διαδικασίες ανάπτυξης μπορεί να περιέχουν προβλέψεις που να μην μπορούν να ικανοποιηθούν στο συγκεκριμένο σημείο στο κύκλο ζωής. Μια απόκλιση είναι μια γραπτή εξουσιοδότηση, η οποία δίνεται εξαρχής στον κατασκευαστή ενός στοιχείου, για να αποκλίνει από μια συγκεκριμένη απόδοση ή σχεδιαστική απαίτηση για ένα συγκεκριμένο αριθμό κομματιών ή ένα συγκεκριμένο χρονικό διάστημα. Μια αποποίηση είναι μια γραπτή εξουσιοδότηση να γίνει αποδεκτό ένα στοιχείο σχηματισμού ή άλλο συγκεκριμένο αντικείμενο που βρέθηκε κατά τη παραγωγή ή αφότου έχει υποβληθεί σε επιθεώρηση, να αποσυρθεί από συγκεκριμένες απαιτήσεις αλλά δεν παύει να θεωρείται κατάλληλο για χρήση όπως είναι ή μετά από διορθώσεις μέσω μιας εγκεκριμένης μεθόδου. Σε αυτές τις περιπτώσεις, μια επίσημη διαδικασία χρησιμοποιείται για την έγκριση για απόκλιση ή αποποίηση από τις προβλέψεις.

## Αποτίμηση κατάστασης σχηματισμών λογισμικού


Η αποτίμηση της κατάστασης σχηματισμών λογισμικού ( Software Configuration Status Accounting ) ( SCSA )  είναι ένα στοιχείου της διαχείρισης σχηματισμών το οποίο αποτελείται από την καταγραφή και αναφορά των πληροφοριών που είναι απαραίτητες για την αποτελεσματική διαχείριση ενός σχηματισμού.

### Πληροφορία κατάσταση σχηματισμών λογισμικού


Η δραστηριότητα αποτίμησης της κατάστασης σχηματισμών λογισμικού σχεδιάζει και λειτουργεί ένα σύστημα για τον συλλογή και την αναφορά των απαραίτητων πληροφοριών καθώς εξελίσσεται ο κύκλος ζωής ενός προϊόντος. Όπως και σε κάθε πληροφοριακό σύστημα, η πληροφορία για την κατάσταση σχηματισμού, η οποία πρέπει να διαχειριστεί για τους εξελισσόμενους σχηματισμούς, πρέπει να καθοριστεί, να συλλεχθεί και να συντηρηθεί. Διάφορες πληροφορίες και μετρήσεις είναι απαραίτητες για την υποστήριξη της διεργασίας διαχείρισης σχηματισμών λογισμικού και για την ανταπόκριση στις ανάγκες της αναφορά κατάστασης σχηματισμών για διαχείριση, ανάπτυξη λογισμικού και άλλες σχετικές δραστηριότητες. Τα είδη της πληροφορίας που είναι διαθέσιμα περιλαμβάνουν την εγκεκριμένη ταυτότητα του σχηματισμού, καθώς και την ταυτότητα και την τρέχουσα κατάσταση ολοκλήρωσης των αλλαγών, των αποκλίσεων και των αποποιήσεων.  
Για να επιτευχθεί η δραστηριότητα συλλογής και αναφοράς δεδομένων της αποτίμησης της κατάστασης σχηματισμών λογισμικού, είναι απαραίτητη η κάποιου είδους αυτοματοποιημένη υποστήριξη από εργαλεία. Αυτά μπορεί να είναι η δυνατότητα μιας βάσης δεδομένων, ένα μεμονωμένο εργαλείο ή η δυνατότητα ενός μεγαλύτερου περιβάλλοντος ολοκληρωμένων εργαλεία.

### Αναφορά κατάστασης διαμόρφωσης λογισμικού


Οι πληροφορίες που αναφέρονται μπορούν να χρησιμοποιηθούν από διάφορα στοιχεία του οργανισμού ή του έργου -- συμπεριλαμβανομένων της ομάδας ανάπτυξης, της ομάδας συντήρησης, καθώς και των δραστηριοτήτων διοίκησης του έργου και ποιότητας λογισμικού. Η αναφορά μπορεί να έχει την μορφή των ad hoc αιτημάτων  για να απαντηθούν συγκεκριμένες ερωτήσεις ή την μορφή περιοδικής παραγωγής προσχεδιασμένων αναφορών. Κάποιες πληροφορίες που προκύπτουν από την δραστηριότητα αποτίμησης της κατάστασης κατά την διάρκεια του κύκλου ζωής μπορούν να καταλήξουν ως αναφορές διασφάλισης ποιότητας.

Εκτός από το να αναφέρει την τρέχουσα κατάσταση του σχεδιασμού, οι πληροφορίες που συλλέγονται από την αποτίμηση της κατάστασης σχηματισμών λογισμικού μπορεί να αποτελέσουν βάση για διάφορες μετρήσεις. Παραδείγματα περιλαμβάνουν τον αριθμό αιτημάτων για αλλαγή ανά στοιχείο σχηματισμού λογισμικού και τη μέση ώρα που χρειάζεται για να εφαρμοστεί ένα αίτημα για αλλαγή.

## Επιθεώρηση σχηματισμών λογισμικού


Η επιθεώρηση λογισμικού είναι μια ανεξάρτητη εξέταση ενός λειτουργικού προϊόντος ή ενός συνόλου λειτουργικών προϊόντων προκειμένου να εκτιμηθεί η συμμόρφωσή τους με τις προδιαγραφές, τα στάνταρτ, τις συνθήκες συμβολαίου και άλλα κριτήρια. Οι επιθεωρήσεις πραγματοποιούνται σύμφωνα με μια καλά ορισμένη διεργασία, που αποτελείται από πολλούς ρόλους ελεγκτών και πολλές αρμοδιότητες. Συνεπώς, κάθε επιθεώρηση πρέπει να σχεδιάζεται προσεκτικά. Ένας έλεγχος μπορεί να απαιτεί ένα σύνολο ανθρώπων να πραγματοποιήσουν ένα εύρος δραστηριοτήτων μέσα σε ένα σχετικά σύντομο χρονικό διάστημα. Εργαλεία που υποστηρίζουν τον προγραμματισμό και τη διεξαγωγή ενός ελέγχου μπορεί να διευκολύνουν σημαντικά τη διαδικασία αυτή.

Η επιθεώρηση σχηματισμών λογισμικού καθορίζει το βαθμό στον οποίο ένα στοιχείο πληροί τα απαιτούμενα λειτουργικά και φυσικά χαρακτηριστικά. Πληροφοριακοί έλεγχοι τέτοιου τύπου μπορούν να πραγματοποιηθούν σε σημεία κλειδιά κατά τον κύκλο ζωής. Δύο τύποι επίσημων ελέγχων μπορούν να απαιτούνται από την ισχύουσα σύμβαση, για παράδειγμα σε συμβόλαια που καλύπτουν κρίσιμα λογισμικά: Η λειτουργική επιθεώρηση σχηματισμών( Physical Configuration Audit ) ( PCA )  και η φυσική επιθεώρηση σχηματισμών ( Functional Configuration Audit ) ( FCA ). Η επιτυχής ολοκλήρωση αυτών των δύο μπορεί να είναι προϋπόθεση για την καθιέρωση της βάσης του προϊόντος.

### Λειτουργική επιθεώρηση σχηματισμών λογισμικού


Ο λόγος ύπαρξης της λειτουργικής επιθεώρησης σχηματισμών λογισμικού είναι να διασφαλίζει ότι το υπό έλεγχο στοιχείο λογισμικού είναι συνεπές με τις ισχύουσες προδιαγραφές του. Τα κύρια δεδομένα για την επιθεώρηση αυτή προέρχονται από το αποτέλεσμα των δραστηριοτήτων επαλήθευσης και επικύρωσης λογισμικού (βλ. παράγραφο 2.2, Επικύρωση και Επαλήθευση στο γνωστικό πεδίο Ποιότητα λογισμικού).

### Φυσική επιθεώρηση διαμόρφωσης λογισμικού


Ο λόγος ύπαρξης της επιθεώρησης διαμόρφωσης λογισμικού είναι να διασφαλίζει ότι η τεκμηρίωση του σχεδιασμού και της αναφοράς είναι συνεπής με το προϊόν λογισμικού όπως είναι αναπτυγμένο.

### Εν εξελίξει επιθεώρηση της βάσης λογισμικού

Όπως αναφέρεται και παραπάνω, οι επιθεωρήσεις μπορούν να πραγματοποιηθούν κατά τη διάρκεια ανάπτυξης για να εξεταστεί η παρούσα κατάσταση συγκεκριμένων στοιχείων του σχηματισμού. Στην περίπτωση αυτή, μία επιθεώρηση μπορεί να εφαρμοστεί δειγματοληπτικά σε στοιχεία της βάσης για να διασφαλιστεί, ότι η απόδοσή τους είναι συνεπής με τις προδιαγραφές ή για να διασφαλιστεί ότι η εξελισσόμενη τεκμηρίωση συνεχίζει να είναι συνεπής με την υπό ανάπτυξη βάση.

## Διαχείριση εκδόσεων λογισμικού και παράδοση


Σε αυτό το πλαίσιο, ο όρος έκδοση αναφέρεται στη διανομή ενός στοιχείου σχηματισμών λογισμικού έξω από τη δραστηριότητα ανάπτυξης. Αυτό περιλαμβάνει εσωτερική έκδοση καθώς και διανομή στους πελάτες. Όταν υπάρχουν διαφορετικές εκδόσεις ενός στοιχείου λογισμικού έτοιμες για αποστολή ( όπως εκδόσεις για διαφορετικές πλατφόρμες ή εκδόσεις με διαφορετικές δυνατότητες), είναι συχνά απαραίτητο να δημιουργηθούν ξανά συγκεκριμένες εκδόσεις και να συσκευαστούν τα σωστά υλικά για την αποστολή της έκδοσης. Η βιβλιοθήκη λογισμικού αποτελεί στοιχείο κλειδί για την επίτευξη των δραστηριοτήτων έκδοσης και αποστολής.

### Δόμηση λογισμικού


Η Δόμηση Λογισμικού είναι η δραστηριότητα η οποία συνδυάζει τις σωστές εκδόσεις στοιχείων σχηματισμού λογισμικού, χρησιμοποιώντας τα απαραίτητα δεδομένα σχηματισμού, με σκοπό να δημιουργήσει ένα εκτελέσιμο πρόγραμμα έτοιμο για αποστολή στον πελάτη ή κάποιον άλλο παραλήπτη, όπως για παράδειγμα την δραστηριότητα ελέγχου. Για συστήματα με υλικό ή ενδιάμεσο  λογισμικό, το εκτελέσιμο πρόγραμμα παραδίδεται στην δραστηριότητα δόμησης συστήματος. Οι οδηγίες δόμησης διασφαλίζουν ότι θα ακολουθηθούν τα σωστά βήματα δόμησης στη σωστή σειρά. Μαζί με τη δόμηση λογισμικού για νέες εκδόσεις, είμαι συνήθως απαραίτητο για τη διαχείριση σχηματισμών λογισμικού να έχει και την ικανότητα να αναπαράγει παλαιότερες εκδόσεις για ανάκτηση, έλεγχο, συντήρηση ή άλλους επιπρόσθετους σκοπούς έκδοσης.

Το λογισμικό χτίζεται με τη χρήση συγκεκριμένων εκδόσεων από υποστηρικτικά εργαλεία, όπως μεταγλωττιστές. Μπορεί να είναι απαραίτητο να χτιστεί ξανά από την αρχή ένα ακριβές αντίγραφο ενός παλαιότερα δημιουργημένου στοιχείου σχηματισμών λογισμικού. Στην περίπτωση αυτή, θα πρέπει τα υποστηρικτικά εργαλεία και οι σχετικές οδηγίες δόμησης να υπόκεινται στον έλεγχο της διαχείρισης σχηματισμών λογισμικού για να διασφαλιστεί η διαθεσιμότητα των σωστών εκδόσεων των εργαλείων.

Η δυνατότητα ενός εργαλείου είναι χρήσιμη για την επιλογή της σωστής έκδοσης ενός στοιχείου λογισμικού για ένα δεδομένο περιβάλλον-στόχο και για την αυτοματοποίηση της διεργασίας δόμησης του λογισμικού από μια επιλεγμένη έκδοση και από τα κατάλληλα δεδομένα σχηματισμού. Για έργα με παράλληλο ή διαμοιρασμένο περιβάλλον ανάπτυξης, αυτή η δυνατότητα του εργαλείου είναι απαραίτητη. Τα περισσότερα περιβάλλοντα ανάπτυξης παρέχουν αυτή τη δυνατότητα. Τα εργαλεία αυτά διαφέρουν σε πολυπλοκότητα ως προς την απαίτηση από τον μηχανικό λογισμικού να μάθει μια συγκεκριμένη σεναριογλώσσα για πιο γραφικοκεντρικές προσεγγίσεις, οι οποίες κρύβουν μεγάλη πολυπλοκότητα ενός «έξυπνου» εξοπλισμού δόμησης.

Η διεργασία δόμησης καθώς και τα προϊόντα είναι συχνά στοιχεία που υπόκεινται στη επαλήθευση της ποιότητας λογισμικού. Αποτελέσματα της διαδικασίας δόμησης μπορεί να είναι χρήσιμα για μελλοντική αναφορά και μπορεί να γίνουν εγγραφές διασφάλισης ποιότητας.

### Διαχείριση έκδοσης λογισμικού


Η διαχείριση έκδοσης λογισμικού περιλαμβάνει τον προσδιορισμό, τη συσκευασία και αποστολή των στοιχείων ενός προϊόντος -- για παράδειγμα, ένα εκτελέσιμο πρόγραμμα, την τεκμηρίωση, τις σημειώσεις έκδοσης, και τα δεδομένα σχηματισμού. Δεδομένου ότι αλλαγές στο προϊόν μπορεί να συμβούν σε συνεχή βάση, μια ανησυχία της διαχείρισης εκδόσεων είναι το να καθορίσει το πότε να δημοσιοποιήσει μία έκδοση. Η σημαντικότητα των προβλημάτων, που αντιμετωπίζονται από την έκδοση, καθώς και οι μετρήσεις πυκνότητας σφαλμάτων στις προηγούμενες εκδόσεις επηρεάζουν την απόφαση διάθεσης του λογισμικού. Η εργασία πακεταρίσματος πρέπει να προσδιορίζει ποια στοιχεία του προϊόντος πρόκειται να παραδοθούν και στη συνέχεια να επιλέξει τις κατάλληλες παραλλαγές των στοιχείων αυτών δεδομένου της χρήσης του προϊόντος για την οποία προορίζονται. Η τεκμηρίωση των πληροφοριών σχετικά με τα φυσικά πλαίσια μιας έκδοσης, είναι γνωστή και ως τεκμηρίωση περιγραφής εκδόσεων. Οι σημειώσεις έκδοσης συνήθως περιγράφουν νέες δυνατότητες, γνωστά προβλήματα και απαιτήσεις της πλατφόρμας απαραίτητες για τη σωστή λειτουργία του προϊόντος. Το πακέτο που πρόκειται να εκδοθεί περιέχει επίσης οδηγίες εγκατάστασης και αναβάθμισης. Το τελευταίο, μπορεί να είναι πολύπλοκο αν λάβουμε υπόψη μας το γεγονός ότι μερικοί χρήστες μπορεί να έχουν εγκατεστημένη κάποια έκδοση η οποία είναι αρκετές εκδόσεις παλαιότερη. Σε μερικές περιπτώσεις, μπορεί να είναι απαραίτητη η διαχείριση εκδόσεων για να ανιχνεύεται η διανομή του προϊόντος σε διάφορους πελάτες ή συστήματα, για παράδειγμα σε περίπτωση απαιτήθηκε από τον  ο προμηθευτής να ενημερώσει ένα πελάτη για νέα προβλήματα. Εν τέλει, μπορεί να χρησιμοποιηθεί  ένας μηχανισμός για να διασφαλίζει την ακεραιότητα του στοιχείου έκδοσης, για παράδειγμα με την έκδοση μιας ψηφιακής υπογραφής μαζί με το προϊόν.

Η δυνατότητα ενός εργαλείου απαιτείται για την υποστήριξη αυτών των λειτουργιών διαχείρισης εκδόσεων. Είναι χρήσιμο να υπάρχει μια σύνδεση με το εργαλείο που υποστηρίζει τη διεργασία αίτησης αλλαγών έτσι ώστε να γίνεται χαρτογράφηση του πλαισίου που πρόκειται να εκδοθεί σε σχέση με τη διαχείριση σχηματισμών λογισμικού που έχει ληφθεί. Αυτό το εργαλείο μπορεί επίσης να συντηρεί πληροφορίες σχετικές με διάφορες πλατφόρμες και διάφορα περιβάλλοντα πελατών.

## Εργαλεία διαχείρισης σχηματισμών λογισμικού


Όταν συζητάμε για εργαλεία διαχείρισης σχηματισμών λογισμικού, είναι υποστηρικτικό να τα κατηγοριοποιούμε. Τα εργαλεία διαχείρισης σχηματισμών λογισμικού μπορούν να χωριστούν σε τρεις κατηγορίες ανάλογα με το πεδίο δράσης που παρέχουν υποστήριξη: μεμονωμένη υποστήριξη, υποστήριξη σχετική με το έργο και υποστήριξη σε όλο το εύρος της επιχείρησης.

Τα εργαλεία μεμονωμένης υποστήριξης είναι κατάλληλα και συνήθως επαρκή για μικρούς οργανισμούς ή ομάδες ανάπτυξης χωρίς παραλλαγές στα προϊόντα λογισμικού ή άλλες πολύπλοκες απαιτήσεις διαχείρισης σχηματισμών λογισμικού. Περιλαμβάνουν:

  * Εργαλεία ελέγχου εκδόσεων: ανίχνευση, τεκμηρίωση και αποθήκευση μεμονωμένων στοιχείων σχηματισμού, όπως ο πηγαίος κώδικας και η εξωτερική τεκμηρίωση.
  * Εργαλεία δόμησης: στην απλούστερη μορφή τους, όπως εργαλεία μεταγλώττισης και σύνδεσης με μια εκτελέσιμη έκδοση του λογισμικού. Πιο εξελιγμένα εργαλεία δόμησης μπορούν, μεταξύ άλλων, να εξάγουν την πιο πρόσφατη έκδοση από το λογισμικό ελέγχου εκδόσεων, να πραγματοποιούν ελέγχους ποιότητας, να εκτελούν ελέγχους παλινδρόμησης, και να παράγουν διάφορα είδη αναφορών.
  * Εργαλεία ελέγχου αλλαγών: κυρίως υποστηρίζουν τον έλεγχο αιτημάτων αλλαγής και τα γεγονότα ειδοποιήσεων (για παράδειγμα, αλλαγές στην κατάσταση αιτήματος αλλαγής, ή ενδιάμεσοι στόχοι που επιτεύχθηκαν).

Εργαλεία υποστήριξης σχετική με το έργο υποστηρίζουν κυρίως διαχείριση σε εργασιακό χώρο για ομάδες ανάπτυξης και υπεύθυνους ολοκλήρωσης, είναι τυπικά εφικτό να υποστηρίζουν κατανεμημένα περιβάλλοντα ανάπτυξης. Τέτοια εργαλεία είναι κατάλληλα για μεσαίου έως μεγάλου μεγέθους οργανισμούς με παραλλαγές στα προϊόντα λογισμικού και παράλληλη ανάπτυξη λογισμικού αλλά χωρίς απαιτήσεις πιστοποίησης.

Εργαλεία υποστήριξης σε όλο το εύρος της επιχείρησης μπορούν τυπικά να αυτοματοποιήσουν κομμάτια της διεργασίας σε όλο το εύρος του οργανισμού, παρέχοντας υποστήριξη για τη διαχείριση της ροής της εργασίας, τους ρόλους και τις αρμοδιότητες. Είναι ικανά να χειριστούν πολλά στοιχεία, δεδομένα και κύκλους ζωής. Τέτοια εργαλεία προστίθενται στην υποστηρικτικές δραστηριότητες ενός έργου υποστηρίζοντας μια πιο επίσημη διεργασία ανάπτυξης, περιλαμβάνοντας απαιτήσεις πιστοποίησης.
