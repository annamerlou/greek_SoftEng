χρονικές στιγμές κατά τον κύκλο ζωής του. Η αλλαγή εξουσίας για αυτή την βάση συνήθως
επαφίεται στον οργανισμό ανάπτυξης. Παρ’ όλα αυτά, μπορεί να την μοιράζεται με άλλες
οργανωσιακές δομές (για παράδειγμα, τη διαχείριση σχηματισμών λογισμικού ή τον έλεγχο).
Η προϊοντική βάση ανταποκρίνεται στο ολοκληρωμένο προϊόν λογισμικού, που παραδίδεται
για την ολοκλήρωση συστήματος. Οι βάσεις που θα χρησιμοποιηθούν σε ένα συγκεκριμένο
έργο, μαζί με τα ανάλογα επίπεδα εξουσίας που απαιτούνται για την έγκριση αλλαγών,
προσδιορίζονται τυπικά στο σχέδιο διαχείρισης σχηματισμών λογισμικού.

6.5.1.6 Απόκτηση στοιχείων σχηματισμών λογισμικού


Τα στοιχεία σχηματισμών λογισμικού υπόκεινται στον έλεγχο της διαχείρισης σχηματισμών
λογισμικού σε διάφορες χρονικές στιγμές. Με άλλα λόγια, ενσωματώνονται σε μια συγκεκρι-
μένη βάση σε μια συγκεκριμένη χρονική στιγμή στον κύκλο ζωής του λογισμικού. Το γεγονός
που δίνει έναυσμα για να συμβεί η ενσωμάτωση είναι η ολοκλήρωση κάποιας μορφής μίας
επίσημης εργασίας αποδοχής, όπως η επίσημη επιθεώρηση. Το Σχήμα 6.2 αποτυπώνει την
ανάπτυξη μίας βάσης καθώς προχωράει ο κύκλος ζωής. Το σχήμα αυτό βασίζεται, για λόγους
απεικόνισης και μόνο, στο μοντέλο του καταρράκτη. Οι δείκτες που χρησιμοποιούνται στο
σχήμα δείχνουν τις εκδόσεις των αναπτυσσόμενων στοιχείων. Το αίτημα αλλαγής λογισμικού
περιγράφεται στην ενότητα 3.1.

{id="fig-softmaintenpr-5.2"}
![Σχήμα 5.2 Η διεργασία συντήρησης λογισμικού.](images/6-2.png)


Κάποια άλλα μοντέλα διεργασιών συντήρησης είναι:

  * γρήγορης λύσης
  * σπειροειδές
  * Osborne's
  * επαναληπτικής βελτιστοποίησης και
  * με στόχο την επαναχρησιμοποίηση

Πρόσφατα, στην συντήρηση έχουν υιοθετηθεί και ευέλικτες μεθοδολογίες,
